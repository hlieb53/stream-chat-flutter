name: Build

on:
  push:
    branches:
      - master
      - feature/new-ui
      - feature/mono-repo
  release:
    types:
      - created
defaults:
  run:
    working-directory: packages/flutter_widgets

jobs:
  build_and_deploy_ios:
    runs-on: [macos-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Install RubyGems
        run: |
          cd example/ios
          bundle install
      - uses: subosito/flutter-action@v1.4.0
        with:
          channel: 'stable'
      - name: Install firebase-tools
        run: npm install -g firebase-tools
      - name: Flutter setup
        run: |
          cd example
          flutter pub get
      - name: Build and release
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          cd example
          flutter build ios --release --no-codesign
          cd ios
          bundle exec fastlane deploy_to_firebase
  build_and_deploy_android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1.4.0
        with:
          channel: 'stable'
      - run: |
          cd example
          flutter pub get
      - name: Decode google-services.json
        env:
          ANDROID_GOOGLE_SERVICES: ${{ secrets.ANDROID_GOOGLE_SERVICES }}
        run: echo $ANDROID_GOOGLE_SERVICES > ./example/android/app/google-services.json
      - name: Build
        run: |
          cd example
          flutter build apk
      - name: Deploy
        uses: wzieba/Firebase-Distribution-Github-Action@v1.3.2
        with:
          appId: ${{secrets.FIREBASE_ANDROID_APPID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: stream-testers
          debug: true
          file: packages/flutter_widgets/example/build/app/outputs/apk/release/app-release.apk