name: CI

on:
  release:
    types:
      - created

env:
  flutter_version: "1.17.5"

jobs:
  build_and_deploy_ios:
      runs-on: [macos-latest]
      steps:
      - uses: actions/checkout@v1
      - name: Cache RubyGems
        uses: actions/cache@v1
        id: rubygem-cache
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gem-
      - name: Install RubyGems
        if: steps.rubygem-cache.outputs.cache-hit != 'true'
        run: |
          cd example/ios
          bundle install
      - uses: subosito/flutter-action@v1.3.2
        with:
          flutter-version: ${{ env.flutter_version }}
      - name: Install firebase-tools
        run: npm install -g firebase-tools
      - name: Flutter setup
        run: |
          cd example
          flutter pub get
          flutter build ios --release --no-codesign
      - name: Build and release
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          cd example/ios
          bundle exec fastlane deploy_to_firebase
  build_and_deploy_android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1.3.2
        with:
          flutter-version: ${{ env.flutter_version }}
      - run: |
          cd example
          flutter pub get
      - name: Build
        run: |
          cd example
          flutter build apk
      - name: Deploy
        uses: wzieba/Firebase-Distribution-Github-Action@v1.2.1
        with:
          appId: ${{secrets.FIREBASE_ANDROID_APPID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: stream-testers
          file: example/build/app/outputs/apk/release/app-release.apk
